{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/counter.js","reducers/islogged.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","isLogged","dispatch","useDispatch","className","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterReducer","action","loggedReducer","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"4LAqBeA,MAjBf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACtCC,EAAWC,cAEjB,OACE,sBAAKC,UAAU,MAAf,UACE,2CAAcN,KAEd,wBAAQO,QAAW,kBAAMH,ECZpB,CACHI,KAAM,eDWR,eACA,wBAAQD,QAAW,kBAAMH,ECPpB,CACHI,KAAM,eDMR,eAECL,EAAW,wFAAkE,mEEJrEM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCICQ,EAXQ,WAAwB,IAAvBhB,EAAsB,uDAAd,EAAGiB,EAAW,uCAC1C,OAAOA,EAAOX,MACV,IAAK,YACD,OAAON,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,ICEJkB,EATO,WAA4B,IAA3BlB,EAA0B,wDAAXiB,EAAW,uCAC7C,OAAQA,EAAOX,MACX,IAAK,UACD,OAAQN,EACZ,QACI,OAAOA,ICIJmB,EALKC,YAAgB,CAChCtB,QAASkB,EACTf,SAAUiB,ICGRG,EAAQC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.32f41bf6.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement } from './actions/index';\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1>Counter: {counter}</h1>\n\n      <button onClick = {() => dispatch(increment())}>+</button>\n      <button onClick = {() => dispatch(decrement())}>-</button>\n\n      {isLogged ? <h3>Valuable information I shouldn't see if not logged in.</h3> : <h3>Log in to see the neat stuff!</h3>}\n    </div>\n  );\n}\n\nexport default App;\n","export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    };\n};\n\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    };\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const counterReducer = (state = 0, action) => {\n    switch(action.type) {\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n        default: \n            return state\n    }\n};\n\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\n    switch (action.type) {\n        case 'SIGN_IN':\n            return !state;\n        default:\n            return state;\n    }\n};\n\nexport default loggedReducer;","import counterReducer from './counter';\nimport loggedReducer from './islogged';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    counter: counterReducer,\n    isLogged: loggedReducer\n});\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport allReducers from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}