{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{increment,decrement}from'./actions/index';function App(){var counter=useSelector(function(state){return state.counter;});var isLogged=useSelector(function(state){return state.isLogged;});var dispatch=useDispatch();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Counter: \",counter]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch(increment());},children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch(decrement());},children:\"-\"}),isLogged?/*#__PURE__*/_jsx(\"h3\",{children:\"Valuable information I shouldn't see if not logged in.\"}):/*#__PURE__*/_jsx(\"h3\",{children:\"Log in to see the neat stuff!\"})]});}export default App;","map":{"version":3,"sources":["/Users/dokolas/Desktop/Projects/reduxexample2/src/App.js"],"names":["React","useSelector","useDispatch","increment","decrement","App","counter","state","isLogged","dispatch"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,SAApB,KAAqC,iBAArC,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,OAAO,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACD,OAAV,EAAN,CAA3B,CACA,GAAME,CAAAA,QAAQ,CAAGP,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAV,EAAN,CAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,kCAAcI,OAAd,GADF,cAGE,eAAQ,OAAO,CAAI,yBAAMG,CAAAA,QAAQ,CAACN,SAAS,EAAV,CAAd,EAAnB,eAHF,cAIE,eAAQ,OAAO,CAAI,yBAAMM,CAAAA,QAAQ,CAACL,SAAS,EAAV,CAAd,EAAnB,eAJF,CAMGI,QAAQ,cAAG,8EAAH,cAAqE,qDANhF,GADF,CAUD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement } from './actions/index';\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1>Counter: {counter}</h1>\n\n      <button onClick = {() => dispatch(increment())}>+</button>\n      <button onClick = {() => dispatch(decrement())}>-</button>\n\n      {isLogged ? <h3>Valuable information I shouldn't see if not logged in.</h3> : <h3>Log in to see the neat stuff!</h3>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}